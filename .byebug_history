c
pin_ids.sample(5)
n
tags.sample
n
pin_ids[0..1]
pin_ids
n
c
n
pin_ids
n
c
quit
bb = page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[0].attributes['href'].value.split('/')[2] }
bb[0].split('/')[2]
bb[0].split('/')
bb = page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[0].attributes['href'].value }
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[0].attributes['href'].value }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[0].attributes['href'].value }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[0].attributes['value'] }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[0].attributes.value }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[0].attributes }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a')[1].attributes }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a').attributes }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder').css('a') }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.css('.Module').css('.pinWrapper').css('.pinImageActionButtonWrapper').css('.pinHolder') }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').map {|c| c.name }
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item').length
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('.item')
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').css('div')
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[3]
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[2]
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[1]
p ''
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[0]
p ''
pp pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[0]
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[0]
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[0].attributes
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[0].children.length
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children[0]
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').children.length
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems').length
pp page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems')
page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid').css('.GridItems')
page.css('body').css('.App').css('.appContent').css('.mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid')
page.css('body').css('.App').css('.appContent').css('.mainContainer')
page.css('body').css('.App').css('.appContent')
page.css('body').css('.App').css('.appContent').css('mainContainer')
page.css('body').css('.App').css('mainContainer')
page.css('body').css('.App').css('mainContainer').css('.SearchPage')
page.css('body').css('.App').css('mainContainer').css('.SearchPage').css('.SearchPageContent')
page.css('body').css('.App').css('mainContainer').css('.SearchPage').css('.SearchPageContent').css('.Grid')
page.css('body').css('.App')
page.css('body').css('.App.')
page.css('body')
pp page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1]
pp page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children[5]
pp page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children[5].children[1]
pp page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children[5].children[1].children[1]
pp page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children[5].children[1].children[1].children[3]
pp page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children[5].children[1].children[1].children[3].children[1]
pp page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children[5]
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children[5]
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children.length
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].children.css('GridItems')
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].css('GridItems')
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1]
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children[1].map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1].children.map { |c| c.name }
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children[1]
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children.map {|c| c.name }
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children.length
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5].children.map {|c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children[3].children[5]
page.children[3].children[4].children[1].children[5].children[1].children[3].children[4]
page.children[3].children[4].children[1].children[5].children[1].children[3].children[4].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children[3].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children[1].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children[1].map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children[1].map { |c| c.name }
page.children[3].children[4].children[1].children[5].children[1].children.map { |c| c.name }
page.children[3].children[4].children[1].children[5].children[1].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[3].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children[1].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children.map { |c| c.attributes }
page.children[3].children[4].children[1].children[5].children.map { |c| c.value }
page.children[3].children[4].children[1].children[5].children.length
page.children[3].children[4].children[1].children[5].children
page.children[3].children[4].children[1].children[5].attributes
page.children[3].children[4].children[1].children[5].length
page.children[3].children[4].children[1].children[5]
page.children[3].children[4].children[1].children[5].map { |c| c.name }
page.children[3].children[4].children[1].children[5].
page.children[3].children[4].children[1].children[5].map { |c| c.value }
page.children[3].children[4].children[1].children[5].map { |c| c.children.attributes.value }
page.children[3].children[4].children[1].children[5].map { |c| c.attributes.value }
page.children[3].children[4].children[1].children[5]
p ''
page.children[3].children[4].children[1].children[5]
page = Nokogiri::HTML(RestClient.get('https://www.pinterest.com/search/pins/?q=astronomy'))
page.children[3].children[4].children[1].children[5].css('GridItems')
page.children[3].children[4].children[1].children[5]
page.children[3].children[4].children[1].children[3]
page.children[3].children[4].children[1].children[1]
page.children[3].children[4].children[1].children.map { |c| c.name }
page.children[3].children[4].children[1].children.length
page.children[3].children[4].children[1].children
page.children[3].children[4].children[1]
page.children[3].children[4].children.map { |c| c.name }
page.children[3].children[4].children.length
page.children[3].children[4]
page.children[3].children[4].css('GridItems')
page.children[3].children.map {|c| c.name }
page.children[3].children.length
page.children[3].children
page.children[3].attributes
page.children[0].attributes
page.children[0].children
page.children[3].css('GridItems')
page.children[0].css('GridItems')
page.children.map {|c| p
page.children.length
page.children.css('GridItems')
page.css('GridItems')
page2 = RestClient.get('https://www.pinterest.com/search/pins/?q=astronomy')
page = Nokogiri::HTML(RestClient.get('https://www.pinterest.com/search/pins/?q=astronomy'))
RestClient.get('https://www.pinterest.com/search/pins/?q=astronomy
quit
require 'restclient'
c
n
s
c
bot.path
bot.search_pins('lotr')
c
bot
@agent
agent
bot.search_pins('lotr')
agent.gzip_enabled = false
bot.gzip_enabled = false
bot
@agent
aa = bot.search_pins('lotr')
c
aa = bot.search_pins('lotr')
aa = bot.simple_search('lotr')
c
aa = bot.simple_search('lotr')
c
aa = bot.simple_search('lotr')
aa = bot.simple_search(lotr)
c
{ code: res.code, body: body, boards: boards }.as_json
body['resource_response']['data']['all_boards'].as_json
body['resource_response']['data']['all_boards']
body['resource_response']['data']
body['resource_response']
c
n
bot.get_boards
n
c
n
c
n
c
n
c
n
c
n
e.to_s == 'Sorry, that page does not exist.'
n
@client.unfollow(user_id_to_unfollow)
s
c
n
user_ids_to_unfollow
uu = users.select { |id| try @client.user(id).id == id  } 
uu = users.select { |id| try @client.user(id).id == id catch  } 
uu = users.select { |id| try @client.user(id).id == id catch end } 
uu = users.select { |id| @client.user(id).id == id } 
users = [2501939168, 513234562, 266443811]
@client.user(2501939168)
@client.user([2501939168])
@client.user([2501939168, 513234562])
@client.user([2501939168, 513234562, 266443811])
ff.length
ff.map(&:id)
ff.map(&:twitter_id)
ff = @client.followers([2501939168, 513234562, 266443811])
@client.followers([2501939168, 513234562, 266443811])
@client.user([2501939168, 513234562, 266443811])
@client.user([2501939168, 513234562])
@client.user(266443811)
@client.user(2501939168)
@client.unfollow([3074958235, 513234562])
TwitterUser.second
@client.unfollow(513234562)
TwitterUser.first
@client.unfollow(2501939168)
@client.unfollow(user_ids_to_unfollow)
user_ids_to_unfollow
c
@bot.child_bot
@bot.@child_bot
@bot.child_bot
bot.child_bot
self.child_bot
@child_bot.id
@bot.send(:set_child_bot)
@child_bot.id
TwitterBot.first.id
c
@bot.send(:set_child_bot)
@bot.send(:child_bot)
@bot.child_bot
self.child_bot
@child_bot
@child_bot.id
TwitterBot.first.id
c
@twitter_bot
@bot.send(:set_child_bot)
@bot.set_child_bot
@bot.send(:child_bot)
@bot.child_bot
@bot.@child_bot
@bot.children
@bot
self
c
params[:twitter_bot][:tags]
c
@twitter_bot.tags
c
@twitter_bot.tags.map { |tag| tag.strip }.join(', ')
@twitter_bot.tags.join(', ')
params
@twitter_bot.tags
tags
c
params[:twitter_bot][:tags].split(',').map { |tag| tag.strip }
params[:twitter_bot][:tags].strip
params[:twitter_bot][:tags]
c
params
params[:twitter_bot][:tags]
params[:twitter_bot][:tags].split(',')
params[:twitter_bot][:tags].strip.split(',')
bot_params
